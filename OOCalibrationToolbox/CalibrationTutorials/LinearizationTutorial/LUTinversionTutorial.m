function LUTinversionTutorial
    %% Load a calibration file (generated by running OOC_calibrateMonitor)
    calFileName = 'ViewSonicProbe';
    calStruct = LoadCalFile(calFileName);

    %% Instantiate a @CalStruct object that will handle controlled access to the calibration data.
    [calStructOBJ, ~] = ObjectToHandleCalOrCalStruct(calStruct); 
    % Clear the imported calStruct. From now on, all access to cal data is via the calStructOBJ.
    clear 'calStruct';

    % Compute 11-bit gamma curves for all channels
    nInputLevels = 2048;
    CalibrateFitGamma(calStructOBJ, nInputLevels);

    % Set gamma inversion parameters 
    gammaMethod = 1;
    SetGammaMethod(calStructOBJ, gammaMethod, nInputLevels);

    % Get the 11-bit data    
    settingsInput = calStructOBJ.get('gammaInput');
    gamma         = calStructOBJ.get('gammaTable');
    inverseGamma  = calStructOBJ.get('iGammaTable');

    % Plot the Red channel gamma curve and its inverse
    figure()
    plot(settingsInput, gamma(:,1), 'r-'); hold on
    plot(settingsInput, inverseGamma(:,1), 'r--');
    axis 'square'

end

