% MeasureLightBox.m %% Measures spectrum of flourescent light box and displays the intensity% of the three most prominent peaks along with their wavelengths and ratios.% Intended as a quick and dirty way of telling whether the % meter is getting out of calibration.% % 1/5/96	dhb		 Re-wrote from JDT original.% 4/14/99   pbe		 New/old meter choice.  % 6/30/00	pbe		 Added cd to save to correct folder% 4/12/02   dhb, kr  Update for Penn.% 12/01/05			 Fixed data to be stored in ColorShare instead of LabShare% 2/19/10   dhb, sm  OS/X.% 3/11/10   dhb      Read serial number from meter and compare.% 3/11/10   dhb      Initialize meter earlier.% 8/20/12   dhb, sm  PR-670 thread.% 11/11/15  dhb, jr, si  Modify for our two PR-670s.% Clear out clear;% Specify i/oglobal g_useIOPort;g_useIOPort = 1;% Number of measurementsnMeasure = 5;% Which radiometer is being tested?defaultMeter = 1;fprintf(1,'\nWhich meter is being tested?\n');fprintf(1,'\tNew UCSB (serial #60990905) enter 1 (default)\n');fprintf(1,'\tPenn (serial #60020902) enter 2\n');fprintf(1,'\tPR-670 #1 (serial #67122301), enter 3\n');fprintf(1,'\tPR-670 #2 (serial #67154302), enter 4\n');theDataPrompt = sprintf('Enter meter number (default is %g): ',defaultMeter);meter = input(theDataPrompt);if (isempty(meter))  meter = defaultMeter;endswitch (meter)	case 1,		whichMeter = 'NewUCSB';        meterType = 1;        S = [380 5 81];	case 2,		whichMeter = 'Penn';        meterType = 1;        S = [380 5 81];    case 3,		whichMeter = 'PR-670_1';        meterType = 5;        S = [380 2 201];            case 4,		whichMeter = 'PR-670_2';        meterType = 5;        S = [380 2 201];endfileName = [whichMeter '_Table_' date];% Initialize meterCMCheckInit(meterType);% A little more meter specific stuffswitch (meter)	case 1,		if (exist('PR650getserialnumber','file'))			meterSerialNum = PR650getserialnumber;			if (~strcmp(meterSerialNum,'60990905'))				error('Serial number read from meter doesn''t match meter entered.\n');			end        end	case 2,		if (exist('PR650getserialnumber','file'))			meterSerialNum = PR650getserialnumber;			if (~strcmp(meterSerialNum,'60020902'))				error('Serial number read from meter doesn''t match meter entered.\n');			end        end    case 3,% 		if (exist('PR670getserialnumber','file'))% 			meterSerialNum = PR670getserialnumber;% 			if (~strcmp(meterSerialNum,'67122301'))% 				error('Serial number read from meter doesn''t match meter entered.\n');% 			end%         end          meterSerialNum = 0;              case 4,% 		if (exist('PR670getserialnumber','file'))% 			meterSerialNum = PR670getserialnumber;% 			if (~strcmp(meterSerialNum,'67154302'))% 				error('Serial number read from meter doesn''t match meter entered.\n');% 			end%         end          meterSerialNum = 0;end% Initialize mgl interfacemglListener('init');% Instructionsfprintf(1,'Point meter at lightbox.\n');fprintf(1,'Standard distance is 1 meter.\n');fprintf(1,'Click mouse when ready.\n');mglGetMouseEvent(0, 1);mglGetMouseEvent(Inf, 1);wls = SToWls(S);% Make measurementstheSpectra = {};thePeaks = {};fprintf(1,['\n\nLIGHTBOX MEASUREMENTS - ' whichMeter '\n']);for i = 1:nMeasure	% Measure	fprintf(1, 'Measuring %g...\n',i);	S = [380 4 101];	wls = SToWls(S);	spectrum = MeasSpd(S,meterType,'off');		% Find peaks	peaks = FindPeaksLB(spectrum,S);	theSpectra{i} = spectrum;	thePeaks{i} = peaks;end% Plot measurementsfigure; clfhold offpeakLocs = [405 436 546 578];fprintf(1,'\tExpect peaks at 405, 436, 546, and 578 nm\n');for i = 1:nMeasure	peaks = thePeaks{i};    spectrum = theSpectra{i};    	% Report	fprintf(1,'\tActual peaks at: ');	for j = 1:length(peaks);		fprintf(1,' %g',peaks(j));		if (j ~= length(peaks))			fprintf(1,', ');		end	end	fprintf(1,'\n');		% Plot	plot(wls,spectrum,'r');	hold onendfor i = 1:length(peakLocs)    plot([peakLocs(i) peakLocs(i)],[0 max(spectrum(:))],'g');endstr = LiteralUnderscore(fileName);title(str, 'Fontsize', 14, 'Fontname', 'helvetica', 'Fontweight', 'bold');axis([350 800 0 0.3]);hold off;drawnow;% Save to right folderswitch (whichMeter)	case 'NewUCSB',		cd xNewMeter	case 'Penn',		cd xPennMeter    case 'PR-670_1'        cd xPR-670_1    case 'PR-670_2'        cd xPR-670_2endeval(['save(''' fileName ''');']);saveas(gcf,[fileName '.pdf'],'pdf');cd ..% Quit mglListenermglListener('quit');% Close meter communicationCMClose(meterType);