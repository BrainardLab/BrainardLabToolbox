function validatedMondrianColors = GLW_ValidatePolygonSetColors(desiredPolygonSetColors, displayTypeID)
% GLW_ValidatePolygonSetColors - Validates polygon set colors.
%
% Syntax:
% validatedPolygonSetColors = GLW_ValidatePolygonSetColors(desiredPolygonSetColors, displayTypeID)
%
% Description:
% Validates a set of colors for a polygon set depending on the display type.
%
% Input:
% desiredPolygonSetColors (Mx3|cell array|struct) - The desired colors for
%	the polygon set.
% displayTypeID (integer) - The display ID type of the GLWindow.
%   This value should be generated by GLW_ValidateDisplayType.
%
% Output:
% validatedPolygonSetColors (cell array) - The validated polygon set colors
%   for each display in a cell array.

switch displayTypeID
	case {GLWindow.DisplayTypes.Normal, GLWindow.DisplayTypes.BitsPP}
		try
			checkMatrix(desiredPolygonSetColors);
			desiredPolygonSetColors = {desiredPolygonSetColors};
		catch e
			e.message = sprintf('In Normal or Bits++ mode, %s', e.message);
			rethrow(e);
		end
		
	case {GLWindow.DisplayTypes.Stereo, GLWindow.DisplayTypes.StereoBitsPP}
		if iscell(desiredPolygonSetColors)
			if length(desiredPolygonSetColors) ~= 2
				error('In Stereo or Stereo-Bits++ mode, cell arrays must only have 2 elements.');
			end
		elseif isstruct(desiredPolygonSetColors)
			% Validate the fields in the struct.
			GLW_ValidateStructFields(desiredPolygonSetColors, {'left', 'right'});
			
			desiredPolygonSetColors = {desiredPolygonSetColors.left, desiredPolygonSetColors.right};
		else
			error('In Stereo or Stereo-Bits++ mode, polygon set colors must be passed as a 1x2 cell array or struct.');
		end
		
		try
			for i = 1:2
				checkMatrix(desiredPolygonSetColors{i});
			end
		catch e
			e.message = sprintf('In Stereo or Stereo-Bits++ mode, all %s', e.message);
			rethrow(e);
		end
		
	case GLWindow.DisplayTypes.HDR
		if iscell(desiredPolygonSetColors)
			if length(desiredPolygonSetColors) ~= 2
				error('In HDR mode, cell arrays must only have 2 elements.');
			end
		elseif isstruct(desiredPolygonSetColors)
			% Validate the fields in the struct.
			GLW_ValidateStructFields(desiredPolygonSetColors, {'front', 'back'});
			
			desiredPolygonSetColors = {desiredPolygonSetColors.front, desiredPolygonSetColors.back};
		else
			error('In HDR mode, polygon set colors must be passed as a 1x2 cell array or struct.');
		end
		
		try
			for i = 1:2
				checkMatrix(desiredPolygonSetColors{i});
			end
		catch e
			e.message = sprintf('In HDR mode, all %s', e.message);
			rethrow(e);
		end
		
	otherwise
		error('Unknown display type ID of %d.', displayTypeID);
end

validatedMondrianColors = desiredPolygonSetColors;


function checkMatrix(m)
if ~isnumeric(m)
	error('polygon set matrices must be numeric.');
end

if ndims(m) ~= 2
	error('polygon set matrices must have 2 dimensions.');
end

if size(m, 2) ~= 3
	error('polygon set matrices must be Mx3 in size.');
end
